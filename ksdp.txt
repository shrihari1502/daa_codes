import java.util.Scanner;

public class KnapSackDP {

    static int knapsack(int W, int[] weights, int[] profits, int n) {
        int[][] dp = new int[n + 1][W + 1];

        for (int i = 0; i <= n; i++) {
            for (int w = 0; w <= W; w++) {
                if (i == 0 || w == 0) {
                    dp[i][w] = 0;
                } 
                else if (weights[i - 1] <= w) {
                    dp[i][w] = Math.max(profits[i - 1] + dp[i - 1][w - weights[i - 1]], dp[i - 1][w]);
                } 
                else {
                    dp[i][w] = dp[i - 1][w];
                }
            }
        }
        return dp[n][W];
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("number of Items : ");

        int n = scanner.nextInt();
        int[] profits = new int[n];
        int[] weights = new int[n];
        System.out.println("Profits of items :");

        for (int i = 0; i < n; i++) {
            profits[i] = scanner.nextInt();
        }
        System.out.println("weights of items :");

        for (int i = 0; i < n; i++) {
            weights[i] = scanner.nextInt();
        }
        System.out.println("Capacity of sack :");

        int W = scanner.nextInt();

        int maxValue = knapsack(W, weights, profits, n);
        System.out.println(maxValue);

        scanner.close();
    }
}
